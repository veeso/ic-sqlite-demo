name: build_and_test

env:
  RUST_VERSION: 1.87.0

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-1

      - name: Install Just command runner
        uses: extractions/setup-just@v1

      - name: install ic-wasm
        run: |
          wget https://github.com/dfinity/ic-wasm/releases/download/0.8.1/ic-wasm-linux64 -O /usr/local/bin/ic-wasm
          chmod +x /usr/local/bin/ic-wasm

      - name: install candid-extractor
        run: |
          wget https://github.com/dfinity/candid-extractor/releases/download/0.1.6/candid-extractor-x86_64-unknown-linux-gnu.tar.gz -O /tmp/candid-extractor-x86_64-unknown-linux-gnu.tar.gz
          tar -xvf /tmp/candid-extractor-x86_64-unknown-linux-gnu.tar.gz -C /usr/local/bin
          chmod +x /usr/local/bin/candid-extractor

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: $RUST_VERSION
          components: rustfmt, clippy
          target: wasm32-unknown-unknown

      - name: Install Rust (nightly)
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: rustfmt

      - name: check rust code style
        run: |
          just check_code

      - name: build canisters
        run: |
          just build_all_canisters

      - name: test
        run: |
          just test_all
